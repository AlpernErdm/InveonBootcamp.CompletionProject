// <auto-generated />
using System;
using InveonBootcamp.CompletionProject.DataAccessLayer.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace InveonBootcamp.CompletionProject.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250104184419_mig2")]
    partial class mig2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("InveonBootcamp.CompletionProject.Core.Models.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Instructor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<double>("Rating")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Category = "Category 1",
                            Description = "Description 1",
                            Instructor = "Instructor 1",
                            Name = "Course 1",
                            Price = 110m,
                            Rating = 4.0999999999999996
                        },
                        new
                        {
                            Id = 2,
                            Category = "Category 2",
                            Description = "Description 2",
                            Instructor = "Instructor 2",
                            Name = "Course 2",
                            Price = 120m,
                            Rating = 4.2000000000000002
                        },
                        new
                        {
                            Id = 3,
                            Category = "Category 3",
                            Description = "Description 3",
                            Instructor = "Instructor 3",
                            Name = "Course 3",
                            Price = 130m,
                            Rating = 4.2999999999999998
                        },
                        new
                        {
                            Id = 4,
                            Category = "Category 4",
                            Description = "Description 4",
                            Instructor = "Instructor 4",
                            Name = "Course 4",
                            Price = 140m,
                            Rating = 4.4000000000000004
                        },
                        new
                        {
                            Id = 5,
                            Category = "Category 0",
                            Description = "Description 5",
                            Instructor = "Instructor 5",
                            Name = "Course 5",
                            Price = 150m,
                            Rating = 4.0
                        },
                        new
                        {
                            Id = 6,
                            Category = "Category 1",
                            Description = "Description 6",
                            Instructor = "Instructor 6",
                            Name = "Course 6",
                            Price = 160m,
                            Rating = 4.0999999999999996
                        },
                        new
                        {
                            Id = 7,
                            Category = "Category 2",
                            Description = "Description 7",
                            Instructor = "Instructor 7",
                            Name = "Course 7",
                            Price = 170m,
                            Rating = 4.2000000000000002
                        },
                        new
                        {
                            Id = 8,
                            Category = "Category 3",
                            Description = "Description 8",
                            Instructor = "Instructor 8",
                            Name = "Course 8",
                            Price = 180m,
                            Rating = 4.2999999999999998
                        },
                        new
                        {
                            Id = 9,
                            Category = "Category 4",
                            Description = "Description 9",
                            Instructor = "Instructor 9",
                            Name = "Course 9",
                            Price = 190m,
                            Rating = 4.4000000000000004
                        },
                        new
                        {
                            Id = 10,
                            Category = "Category 0",
                            Description = "Description 10",
                            Instructor = "Instructor 10",
                            Name = "Course 10",
                            Price = 200m,
                            Rating = 4.0
                        },
                        new
                        {
                            Id = 11,
                            Category = "Category 1",
                            Description = "Description 11",
                            Instructor = "Instructor 11",
                            Name = "Course 11",
                            Price = 210m,
                            Rating = 4.0999999999999996
                        },
                        new
                        {
                            Id = 12,
                            Category = "Category 2",
                            Description = "Description 12",
                            Instructor = "Instructor 12",
                            Name = "Course 12",
                            Price = 220m,
                            Rating = 4.2000000000000002
                        },
                        new
                        {
                            Id = 13,
                            Category = "Category 3",
                            Description = "Description 13",
                            Instructor = "Instructor 13",
                            Name = "Course 13",
                            Price = 230m,
                            Rating = 4.2999999999999998
                        },
                        new
                        {
                            Id = 14,
                            Category = "Category 4",
                            Description = "Description 14",
                            Instructor = "Instructor 14",
                            Name = "Course 14",
                            Price = 240m,
                            Rating = 4.4000000000000004
                        },
                        new
                        {
                            Id = 15,
                            Category = "Category 0",
                            Description = "Description 15",
                            Instructor = "Instructor 15",
                            Name = "Course 15",
                            Price = 250m,
                            Rating = 4.0
                        },
                        new
                        {
                            Id = 16,
                            Category = "Category 1",
                            Description = "Description 16",
                            Instructor = "Instructor 16",
                            Name = "Course 16",
                            Price = 260m,
                            Rating = 4.0999999999999996
                        },
                        new
                        {
                            Id = 17,
                            Category = "Category 2",
                            Description = "Description 17",
                            Instructor = "Instructor 17",
                            Name = "Course 17",
                            Price = 270m,
                            Rating = 4.2000000000000002
                        },
                        new
                        {
                            Id = 18,
                            Category = "Category 3",
                            Description = "Description 18",
                            Instructor = "Instructor 18",
                            Name = "Course 18",
                            Price = 280m,
                            Rating = 4.2999999999999998
                        },
                        new
                        {
                            Id = 19,
                            Category = "Category 4",
                            Description = "Description 19",
                            Instructor = "Instructor 19",
                            Name = "Course 19",
                            Price = 290m,
                            Rating = 4.4000000000000004
                        },
                        new
                        {
                            Id = 20,
                            Category = "Category 0",
                            Description = "Description 20",
                            Instructor = "Instructor 20",
                            Name = "Course 20",
                            Price = 300m,
                            Rating = 4.0
                        });
                });

            modelBuilder.Entity("InveonBootcamp.CompletionProject.Core.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            OrderDate = new DateTime(2025, 1, 3, 21, 44, 19, 86, DateTimeKind.Local).AddTicks(6258),
                            UserId = new Guid("2475eb2c-6809-4625-a1e4-b95e0c615ced")
                        },
                        new
                        {
                            Id = 2,
                            OrderDate = new DateTime(2025, 1, 2, 21, 44, 19, 86, DateTimeKind.Local).AddTicks(6274),
                            UserId = new Guid("1f8cc70c-763e-48ec-8343-75db0ce64115")
                        },
                        new
                        {
                            Id = 3,
                            OrderDate = new DateTime(2025, 1, 1, 21, 44, 19, 86, DateTimeKind.Local).AddTicks(6275),
                            UserId = new Guid("2e6f547a-a6f6-4c81-9a50-f07d61dda94b")
                        },
                        new
                        {
                            Id = 4,
                            OrderDate = new DateTime(2024, 12, 31, 21, 44, 19, 86, DateTimeKind.Local).AddTicks(6276),
                            UserId = new Guid("cd3bf022-dca1-4a48-8243-3720afa2af4c")
                        },
                        new
                        {
                            Id = 5,
                            OrderDate = new DateTime(2024, 12, 30, 21, 44, 19, 86, DateTimeKind.Local).AddTicks(6277),
                            UserId = new Guid("9faf99e8-9d71-46e7-8729-a4192f5272f2")
                        },
                        new
                        {
                            Id = 6,
                            OrderDate = new DateTime(2024, 12, 29, 21, 44, 19, 86, DateTimeKind.Local).AddTicks(6279),
                            UserId = new Guid("30469696-8b9d-4da2-bdb6-294c4f9a15cf")
                        },
                        new
                        {
                            Id = 7,
                            OrderDate = new DateTime(2024, 12, 28, 21, 44, 19, 86, DateTimeKind.Local).AddTicks(6280),
                            UserId = new Guid("6734178d-6e4d-4a1e-84ef-5026622210ca")
                        },
                        new
                        {
                            Id = 8,
                            OrderDate = new DateTime(2024, 12, 27, 21, 44, 19, 86, DateTimeKind.Local).AddTicks(6280),
                            UserId = new Guid("1085409f-952a-4013-948b-d0f1a2dd56ea")
                        },
                        new
                        {
                            Id = 9,
                            OrderDate = new DateTime(2024, 12, 26, 21, 44, 19, 86, DateTimeKind.Local).AddTicks(6281),
                            UserId = new Guid("496f5bf6-96f3-4e95-8832-8bbcd8ff6e93")
                        },
                        new
                        {
                            Id = 10,
                            OrderDate = new DateTime(2024, 12, 25, 21, 44, 19, 86, DateTimeKind.Local).AddTicks(6283),
                            UserId = new Guid("864cedd7-e8fb-493b-a4fe-db4918f2aeab")
                        },
                        new
                        {
                            Id = 11,
                            OrderDate = new DateTime(2024, 12, 24, 21, 44, 19, 86, DateTimeKind.Local).AddTicks(6283),
                            UserId = new Guid("4a931f2b-8fe4-4311-8aff-bdd3c26663df")
                        },
                        new
                        {
                            Id = 12,
                            OrderDate = new DateTime(2024, 12, 23, 21, 44, 19, 86, DateTimeKind.Local).AddTicks(6284),
                            UserId = new Guid("159d43ba-d5ed-4b4e-a00d-d1f074b981c8")
                        },
                        new
                        {
                            Id = 13,
                            OrderDate = new DateTime(2024, 12, 22, 21, 44, 19, 86, DateTimeKind.Local).AddTicks(6285),
                            UserId = new Guid("1f911c79-9e8d-42c7-9cd3-ae48d2f7ee29")
                        },
                        new
                        {
                            Id = 14,
                            OrderDate = new DateTime(2024, 12, 21, 21, 44, 19, 86, DateTimeKind.Local).AddTicks(6286),
                            UserId = new Guid("bf22affc-9fbd-46df-aede-25de58799f57")
                        },
                        new
                        {
                            Id = 15,
                            OrderDate = new DateTime(2024, 12, 20, 21, 44, 19, 86, DateTimeKind.Local).AddTicks(6286),
                            UserId = new Guid("baaf44d7-acbd-4b70-af3c-b054d150ab2d")
                        },
                        new
                        {
                            Id = 16,
                            OrderDate = new DateTime(2024, 12, 19, 21, 44, 19, 86, DateTimeKind.Local).AddTicks(6287),
                            UserId = new Guid("309c62fe-7205-459d-a00b-5cd05710d09a")
                        },
                        new
                        {
                            Id = 17,
                            OrderDate = new DateTime(2024, 12, 18, 21, 44, 19, 86, DateTimeKind.Local).AddTicks(6288),
                            UserId = new Guid("97989c12-d29d-4609-ab8b-b8461edf3e4e")
                        },
                        new
                        {
                            Id = 18,
                            OrderDate = new DateTime(2024, 12, 17, 21, 44, 19, 86, DateTimeKind.Local).AddTicks(6289),
                            UserId = new Guid("61b6fe51-8241-4bc5-bf7d-cd7e0ddc1395")
                        },
                        new
                        {
                            Id = 19,
                            OrderDate = new DateTime(2024, 12, 16, 21, 44, 19, 86, DateTimeKind.Local).AddTicks(6290),
                            UserId = new Guid("565a67f7-6142-428f-83c6-8d7228cf3af7")
                        },
                        new
                        {
                            Id = 20,
                            OrderDate = new DateTime(2024, 12, 15, 21, 44, 19, 86, DateTimeKind.Local).AddTicks(6291),
                            UserId = new Guid("ca4f7195-789c-4aad-b4e6-7f378634920a")
                        });
                });

            modelBuilder.Entity("InveonBootcamp.CompletionProject.Core.Models.OrderCourse", b =>
                {
                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.HasKey("OrderId", "CourseId");

                    b.HasIndex("CourseId");

                    b.ToTable("OrderCourses");

                    b.HasData(
                        new
                        {
                            OrderId = 1,
                            CourseId = 2
                        },
                        new
                        {
                            OrderId = 1,
                            CourseId = 3
                        },
                        new
                        {
                            OrderId = 2,
                            CourseId = 4
                        },
                        new
                        {
                            OrderId = 2,
                            CourseId = 5
                        },
                        new
                        {
                            OrderId = 3,
                            CourseId = 6
                        },
                        new
                        {
                            OrderId = 3,
                            CourseId = 7
                        },
                        new
                        {
                            OrderId = 4,
                            CourseId = 8
                        },
                        new
                        {
                            OrderId = 4,
                            CourseId = 9
                        },
                        new
                        {
                            OrderId = 5,
                            CourseId = 10
                        },
                        new
                        {
                            OrderId = 5,
                            CourseId = 11
                        },
                        new
                        {
                            OrderId = 6,
                            CourseId = 12
                        },
                        new
                        {
                            OrderId = 6,
                            CourseId = 13
                        },
                        new
                        {
                            OrderId = 7,
                            CourseId = 14
                        },
                        new
                        {
                            OrderId = 7,
                            CourseId = 15
                        },
                        new
                        {
                            OrderId = 8,
                            CourseId = 16
                        },
                        new
                        {
                            OrderId = 8,
                            CourseId = 17
                        },
                        new
                        {
                            OrderId = 9,
                            CourseId = 18
                        },
                        new
                        {
                            OrderId = 9,
                            CourseId = 19
                        },
                        new
                        {
                            OrderId = 10,
                            CourseId = 20
                        },
                        new
                        {
                            OrderId = 10,
                            CourseId = 1
                        },
                        new
                        {
                            OrderId = 11,
                            CourseId = 2
                        },
                        new
                        {
                            OrderId = 11,
                            CourseId = 3
                        },
                        new
                        {
                            OrderId = 12,
                            CourseId = 4
                        },
                        new
                        {
                            OrderId = 12,
                            CourseId = 5
                        },
                        new
                        {
                            OrderId = 13,
                            CourseId = 6
                        },
                        new
                        {
                            OrderId = 13,
                            CourseId = 7
                        },
                        new
                        {
                            OrderId = 14,
                            CourseId = 8
                        },
                        new
                        {
                            OrderId = 14,
                            CourseId = 9
                        },
                        new
                        {
                            OrderId = 15,
                            CourseId = 10
                        },
                        new
                        {
                            OrderId = 15,
                            CourseId = 11
                        },
                        new
                        {
                            OrderId = 16,
                            CourseId = 12
                        },
                        new
                        {
                            OrderId = 16,
                            CourseId = 13
                        },
                        new
                        {
                            OrderId = 17,
                            CourseId = 14
                        },
                        new
                        {
                            OrderId = 17,
                            CourseId = 15
                        },
                        new
                        {
                            OrderId = 18,
                            CourseId = 16
                        },
                        new
                        {
                            OrderId = 18,
                            CourseId = 17
                        },
                        new
                        {
                            OrderId = 19,
                            CourseId = 18
                        },
                        new
                        {
                            OrderId = 19,
                            CourseId = 19
                        },
                        new
                        {
                            OrderId = 20,
                            CourseId = 20
                        },
                        new
                        {
                            OrderId = 20,
                            CourseId = 1
                        });
                });

            modelBuilder.Entity("InveonBootcamp.CompletionProject.Core.Models.Payment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PaymentStatus")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("OrderId")
                        .IsUnique();

                    b.ToTable("Payments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amount = 110m,
                            OrderId = 1,
                            PaymentDate = new DateTime(2025, 1, 3, 21, 44, 19, 86, DateTimeKind.Local).AddTicks(6325),
                            PaymentStatus = "Completed"
                        },
                        new
                        {
                            Id = 2,
                            Amount = 120m,
                            OrderId = 2,
                            PaymentDate = new DateTime(2025, 1, 2, 21, 44, 19, 86, DateTimeKind.Local).AddTicks(6362),
                            PaymentStatus = "Completed"
                        },
                        new
                        {
                            Id = 3,
                            Amount = 130m,
                            OrderId = 3,
                            PaymentDate = new DateTime(2025, 1, 1, 21, 44, 19, 86, DateTimeKind.Local).AddTicks(6363),
                            PaymentStatus = "Completed"
                        },
                        new
                        {
                            Id = 4,
                            Amount = 140m,
                            OrderId = 4,
                            PaymentDate = new DateTime(2024, 12, 31, 21, 44, 19, 86, DateTimeKind.Local).AddTicks(6364),
                            PaymentStatus = "Completed"
                        },
                        new
                        {
                            Id = 5,
                            Amount = 150m,
                            OrderId = 5,
                            PaymentDate = new DateTime(2024, 12, 30, 21, 44, 19, 86, DateTimeKind.Local).AddTicks(6365),
                            PaymentStatus = "Completed"
                        },
                        new
                        {
                            Id = 6,
                            Amount = 160m,
                            OrderId = 6,
                            PaymentDate = new DateTime(2024, 12, 29, 21, 44, 19, 86, DateTimeKind.Local).AddTicks(6366),
                            PaymentStatus = "Completed"
                        },
                        new
                        {
                            Id = 7,
                            Amount = 170m,
                            OrderId = 7,
                            PaymentDate = new DateTime(2024, 12, 28, 21, 44, 19, 86, DateTimeKind.Local).AddTicks(6367),
                            PaymentStatus = "Completed"
                        },
                        new
                        {
                            Id = 8,
                            Amount = 180m,
                            OrderId = 8,
                            PaymentDate = new DateTime(2024, 12, 27, 21, 44, 19, 86, DateTimeKind.Local).AddTicks(6368),
                            PaymentStatus = "Completed"
                        },
                        new
                        {
                            Id = 9,
                            Amount = 190m,
                            OrderId = 9,
                            PaymentDate = new DateTime(2024, 12, 26, 21, 44, 19, 86, DateTimeKind.Local).AddTicks(6368),
                            PaymentStatus = "Completed"
                        },
                        new
                        {
                            Id = 10,
                            Amount = 200m,
                            OrderId = 10,
                            PaymentDate = new DateTime(2024, 12, 25, 21, 44, 19, 86, DateTimeKind.Local).AddTicks(6370),
                            PaymentStatus = "Completed"
                        },
                        new
                        {
                            Id = 11,
                            Amount = 210m,
                            OrderId = 11,
                            PaymentDate = new DateTime(2024, 12, 24, 21, 44, 19, 86, DateTimeKind.Local).AddTicks(6370),
                            PaymentStatus = "Completed"
                        },
                        new
                        {
                            Id = 12,
                            Amount = 220m,
                            OrderId = 12,
                            PaymentDate = new DateTime(2024, 12, 23, 21, 44, 19, 86, DateTimeKind.Local).AddTicks(6371),
                            PaymentStatus = "Completed"
                        },
                        new
                        {
                            Id = 13,
                            Amount = 230m,
                            OrderId = 13,
                            PaymentDate = new DateTime(2024, 12, 22, 21, 44, 19, 86, DateTimeKind.Local).AddTicks(6372),
                            PaymentStatus = "Completed"
                        },
                        new
                        {
                            Id = 14,
                            Amount = 240m,
                            OrderId = 14,
                            PaymentDate = new DateTime(2024, 12, 21, 21, 44, 19, 86, DateTimeKind.Local).AddTicks(6372),
                            PaymentStatus = "Completed"
                        },
                        new
                        {
                            Id = 15,
                            Amount = 250m,
                            OrderId = 15,
                            PaymentDate = new DateTime(2024, 12, 20, 21, 44, 19, 86, DateTimeKind.Local).AddTicks(6373),
                            PaymentStatus = "Completed"
                        },
                        new
                        {
                            Id = 16,
                            Amount = 260m,
                            OrderId = 16,
                            PaymentDate = new DateTime(2024, 12, 19, 21, 44, 19, 86, DateTimeKind.Local).AddTicks(6374),
                            PaymentStatus = "Completed"
                        },
                        new
                        {
                            Id = 17,
                            Amount = 270m,
                            OrderId = 17,
                            PaymentDate = new DateTime(2024, 12, 18, 21, 44, 19, 86, DateTimeKind.Local).AddTicks(6374),
                            PaymentStatus = "Completed"
                        },
                        new
                        {
                            Id = 18,
                            Amount = 280m,
                            OrderId = 18,
                            PaymentDate = new DateTime(2024, 12, 17, 21, 44, 19, 86, DateTimeKind.Local).AddTicks(6376),
                            PaymentStatus = "Completed"
                        },
                        new
                        {
                            Id = 19,
                            Amount = 290m,
                            OrderId = 19,
                            PaymentDate = new DateTime(2024, 12, 16, 21, 44, 19, 86, DateTimeKind.Local).AddTicks(6377),
                            PaymentStatus = "Completed"
                        },
                        new
                        {
                            Id = 20,
                            Amount = 300m,
                            OrderId = 20,
                            PaymentDate = new DateTime(2024, 12, 15, 21, 44, 19, 86, DateTimeKind.Local).AddTicks(6377),
                            PaymentStatus = "Completed"
                        });
                });

            modelBuilder.Entity("InveonBootcamp.CompletionProject.Core.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ca4f7195-789c-4aad-b4e6-7f378634920a"),
                            Email = "test1@example.com",
                            Password = "password1",
                            PhoneNumber = "1234567891",
                            Username = "testuser1"
                        },
                        new
                        {
                            Id = new Guid("2475eb2c-6809-4625-a1e4-b95e0c615ced"),
                            Email = "test2@example.com",
                            Password = "password2",
                            PhoneNumber = "1234567892",
                            Username = "testuser2"
                        },
                        new
                        {
                            Id = new Guid("1f8cc70c-763e-48ec-8343-75db0ce64115"),
                            Email = "test3@example.com",
                            Password = "password3",
                            PhoneNumber = "1234567893",
                            Username = "testuser3"
                        },
                        new
                        {
                            Id = new Guid("2e6f547a-a6f6-4c81-9a50-f07d61dda94b"),
                            Email = "test4@example.com",
                            Password = "password4",
                            PhoneNumber = "1234567894",
                            Username = "testuser4"
                        },
                        new
                        {
                            Id = new Guid("cd3bf022-dca1-4a48-8243-3720afa2af4c"),
                            Email = "test5@example.com",
                            Password = "password5",
                            PhoneNumber = "1234567895",
                            Username = "testuser5"
                        },
                        new
                        {
                            Id = new Guid("9faf99e8-9d71-46e7-8729-a4192f5272f2"),
                            Email = "test6@example.com",
                            Password = "password6",
                            PhoneNumber = "1234567896",
                            Username = "testuser6"
                        },
                        new
                        {
                            Id = new Guid("30469696-8b9d-4da2-bdb6-294c4f9a15cf"),
                            Email = "test7@example.com",
                            Password = "password7",
                            PhoneNumber = "1234567897",
                            Username = "testuser7"
                        },
                        new
                        {
                            Id = new Guid("6734178d-6e4d-4a1e-84ef-5026622210ca"),
                            Email = "test8@example.com",
                            Password = "password8",
                            PhoneNumber = "1234567898",
                            Username = "testuser8"
                        },
                        new
                        {
                            Id = new Guid("1085409f-952a-4013-948b-d0f1a2dd56ea"),
                            Email = "test9@example.com",
                            Password = "password9",
                            PhoneNumber = "1234567899",
                            Username = "testuser9"
                        },
                        new
                        {
                            Id = new Guid("496f5bf6-96f3-4e95-8832-8bbcd8ff6e93"),
                            Email = "test10@example.com",
                            Password = "password10",
                            PhoneNumber = "12345678910",
                            Username = "testuser10"
                        },
                        new
                        {
                            Id = new Guid("864cedd7-e8fb-493b-a4fe-db4918f2aeab"),
                            Email = "test11@example.com",
                            Password = "password11",
                            PhoneNumber = "12345678911",
                            Username = "testuser11"
                        },
                        new
                        {
                            Id = new Guid("4a931f2b-8fe4-4311-8aff-bdd3c26663df"),
                            Email = "test12@example.com",
                            Password = "password12",
                            PhoneNumber = "12345678912",
                            Username = "testuser12"
                        },
                        new
                        {
                            Id = new Guid("159d43ba-d5ed-4b4e-a00d-d1f074b981c8"),
                            Email = "test13@example.com",
                            Password = "password13",
                            PhoneNumber = "12345678913",
                            Username = "testuser13"
                        },
                        new
                        {
                            Id = new Guid("1f911c79-9e8d-42c7-9cd3-ae48d2f7ee29"),
                            Email = "test14@example.com",
                            Password = "password14",
                            PhoneNumber = "12345678914",
                            Username = "testuser14"
                        },
                        new
                        {
                            Id = new Guid("bf22affc-9fbd-46df-aede-25de58799f57"),
                            Email = "test15@example.com",
                            Password = "password15",
                            PhoneNumber = "12345678915",
                            Username = "testuser15"
                        },
                        new
                        {
                            Id = new Guid("baaf44d7-acbd-4b70-af3c-b054d150ab2d"),
                            Email = "test16@example.com",
                            Password = "password16",
                            PhoneNumber = "12345678916",
                            Username = "testuser16"
                        },
                        new
                        {
                            Id = new Guid("309c62fe-7205-459d-a00b-5cd05710d09a"),
                            Email = "test17@example.com",
                            Password = "password17",
                            PhoneNumber = "12345678917",
                            Username = "testuser17"
                        },
                        new
                        {
                            Id = new Guid("97989c12-d29d-4609-ab8b-b8461edf3e4e"),
                            Email = "test18@example.com",
                            Password = "password18",
                            PhoneNumber = "12345678918",
                            Username = "testuser18"
                        },
                        new
                        {
                            Id = new Guid("61b6fe51-8241-4bc5-bf7d-cd7e0ddc1395"),
                            Email = "test19@example.com",
                            Password = "password19",
                            PhoneNumber = "12345678919",
                            Username = "testuser19"
                        },
                        new
                        {
                            Id = new Guid("565a67f7-6142-428f-83c6-8d7228cf3af7"),
                            Email = "test20@example.com",
                            Password = "password20",
                            PhoneNumber = "12345678920",
                            Username = "testuser20"
                        });
                });

            modelBuilder.Entity("InveonBootcamp.CompletionProject.Core.Models.Order", b =>
                {
                    b.HasOne("InveonBootcamp.CompletionProject.Core.Models.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("InveonBootcamp.CompletionProject.Core.Models.OrderCourse", b =>
                {
                    b.HasOne("InveonBootcamp.CompletionProject.Core.Models.Course", "Course")
                        .WithMany("OrderCourses")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InveonBootcamp.CompletionProject.Core.Models.Order", "Order")
                        .WithMany("OrderCourses")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("InveonBootcamp.CompletionProject.Core.Models.Payment", b =>
                {
                    b.HasOne("InveonBootcamp.CompletionProject.Core.Models.Order", "Order")
                        .WithOne("Payment")
                        .HasForeignKey("InveonBootcamp.CompletionProject.Core.Models.Payment", "OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("InveonBootcamp.CompletionProject.Core.Models.Course", b =>
                {
                    b.Navigation("OrderCourses");
                });

            modelBuilder.Entity("InveonBootcamp.CompletionProject.Core.Models.Order", b =>
                {
                    b.Navigation("OrderCourses");

                    b.Navigation("Payment")
                        .IsRequired();
                });

            modelBuilder.Entity("InveonBootcamp.CompletionProject.Core.Models.User", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
